version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: b3_postgres
    environment:
      POSTGRES_USER: b3user
      POSTGRES_PASSWORD: b3pass
      POSTGRES_DB: b3_market
      POSTGRES_INITDB_ARGS: "-c shared_buffers=256MB -c effective_cache_size=1GB"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./scripts/indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U b3user -d b3_market"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - b3net

  redis:
    image: redis:7-alpine
    container_name: b3_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - b3net

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: b3_api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://b3user:b3pass@postgres:5432/b3_market?sslmode=disable
      REDIS_URL: redis://redis:6379
      API_HOST: 0.0.0.0
      API_PORT: 8000
      LOG_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    networks:
      - b3net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: b3_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - b3net

  grafana:
    image: grafana/grafana:latest
    container_name: b3_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - b3net
  node-exporter:
    image: prom/node-exporter:latest
    container_name: b3_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - b3net

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  b3net:
    driver: bridge